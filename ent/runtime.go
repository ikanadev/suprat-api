// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/vmkevv/suprat-api/ent/activity"
	"github.com/vmkevv/suprat-api/ent/measurement"
	"github.com/vmkevv/suprat-api/ent/schema"
	"github.com/vmkevv/suprat-api/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	activityFields := schema.Activity{}.Fields()
	_ = activityFields
	// activityDescCreatedAt is the schema descriptor for created_at field.
	activityDescCreatedAt := activityFields[1].Descriptor()
	// activity.DefaultCreatedAt holds the default value on creation for the created_at field.
	activity.DefaultCreatedAt = activityDescCreatedAt.Default.(func() time.Time)
	measurementFields := schema.Measurement{}.Fields()
	_ = measurementFields
	// measurementDescEnabled is the schema descriptor for enabled field.
	measurementDescEnabled := measurementFields[1].Descriptor()
	// measurement.DefaultEnabled holds the default value on creation for the enabled field.
	measurement.DefaultEnabled = measurementDescEnabled.Default.(bool)
	// measurementDescCreatedAt is the schema descriptor for created_at field.
	measurementDescCreatedAt := measurementFields[2].Descriptor()
	// measurement.DefaultCreatedAt holds the default value on creation for the created_at field.
	measurement.DefaultCreatedAt = measurementDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
