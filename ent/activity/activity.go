// Code generated by entc, DO NOT EDIT.

package activity

import (
	"time"
)

const (
	// Label holds the string label denoting the activity type in the database.
	Label = "activity"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"

	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeColor holds the string denoting the color edge name in mutations.
	EdgeColor = "color"
	// EdgeIcon holds the string denoting the icon edge name in mutations.
	EdgeIcon = "icon"
	// EdgeRecords holds the string denoting the records edge name in mutations.
	EdgeRecords = "records"
	// EdgeMeasurements holds the string denoting the measurements edge name in mutations.
	EdgeMeasurements = "measurements"

	// Table holds the table name of the activity in the database.
	Table = "activities"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "activities"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_activities"
	// ColorTable is the table the holds the color relation/edge.
	ColorTable = "activities"
	// ColorInverseTable is the table name for the Color entity.
	// It exists in this package in order to avoid circular dependency with the "color" package.
	ColorInverseTable = "colors"
	// ColorColumn is the table column denoting the color relation/edge.
	ColorColumn = "color_activities"
	// IconTable is the table the holds the icon relation/edge.
	IconTable = "activities"
	// IconInverseTable is the table name for the Icon entity.
	// It exists in this package in order to avoid circular dependency with the "icon" package.
	IconInverseTable = "icons"
	// IconColumn is the table column denoting the icon relation/edge.
	IconColumn = "icon_activities"
	// RecordsTable is the table the holds the records relation/edge.
	RecordsTable = "records"
	// RecordsInverseTable is the table name for the Record entity.
	// It exists in this package in order to avoid circular dependency with the "record" package.
	RecordsInverseTable = "records"
	// RecordsColumn is the table column denoting the records relation/edge.
	RecordsColumn = "activity_records"
	// MeasurementsTable is the table the holds the measurements relation/edge. The primary key declared below.
	MeasurementsTable = "activity_measurements"
	// MeasurementsInverseTable is the table name for the Measurement entity.
	// It exists in this package in order to avoid circular dependency with the "measurement" package.
	MeasurementsInverseTable = "measurements"
)

// Columns holds all SQL columns for activity fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Activity type.
var ForeignKeys = []string{
	"color_activities",
	"icon_activities",
	"user_activities",
}

var (
	// MeasurementsPrimaryKey and MeasurementsColumn2 are the table columns denoting the
	// primary key for the measurements relation (M2M).
	MeasurementsPrimaryKey = []string{"activity_id", "measurement_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
)
